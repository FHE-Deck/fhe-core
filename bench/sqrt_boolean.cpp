#include <benchmark/benchmark.h>
#include "fhe_context.h"
using namespace fhe_deck;


std::vector<long>
test_sqrt_boolean(FHEContext& ctx, uint16_t num = 0)
{
    Ciphertext ct_num0 = ctx.encrypt_public((num >> 0) & 1);
    Ciphertext ct_num1 = ctx.encrypt_public((num >> 1) & 1);
    Ciphertext ct_num2 = ctx.encrypt_public((num >> 2) & 1);
    Ciphertext ct_num3 = ctx.encrypt_public((num >> 3) & 1);
    Ciphertext ct_num4 = ctx.encrypt_public((num >> 4) & 1);
    Ciphertext ct_num5 = ctx.encrypt_public((num >> 5) & 1);
    Ciphertext ct_num6 = ctx.encrypt_public((num >> 6) & 1);
    Ciphertext ct_num7 = ctx.encrypt_public((num >> 7) & 1);
    Ciphertext ct_num8 = ctx.encrypt_public((num >> 8) & 1);
    Ciphertext ct_num9 = ctx.encrypt_public((num >> 9) & 1);
    Ciphertext ct_num10 = ctx.encrypt_public((num >> 10) & 1);
    Ciphertext ct_num11 = ctx.encrypt_public((num >> 11) & 1);
    Ciphertext ct_num12 = ctx.encrypt_public((num >> 12) & 1);
    Ciphertext ct_num13 = ctx.encrypt_public((num >> 13) & 1);
    Ciphertext ct_num14 = ctx.encrypt_public((num >> 14) & 1);
    Ciphertext ct_num15 = ctx.encrypt_public((num >> 15) & 1);

    auto fand2 = [](long i, long t) -> long {
        switch (i) {
            case 0:  return 0;
            case 1:  return 0;
            case 2:  return 0;
            case 3:  return 1;
            default: assert(0);
        }
    };
    RotationPoly and2 = ctx.genrate_lut(fand2);

    auto fnand2 = [](long i, long t) -> long {
        switch (i) {
            case 0:  return 1;
            case 1:  return 1;
            case 2:  return 1;
            case 3:  return 0;
            default: assert(0);
        }
    };
    RotationPoly nand2 = ctx.genrate_lut(fnand2);

    auto for2 = [](long i, long t) -> long {
        switch (i) {
            case 0:  return 0;
            case 1:  return 1;
            case 2:  return 1;
            case 3:  return 1;
            default: assert(0);
        }
    };
    RotationPoly or2 = ctx.genrate_lut(for2);

    auto fnor2 = [](long i, long t) -> long {
        switch (i) {
            case 0:  return 1;
            case 1:  return 0;
            case 2:  return 0;
            case 3:  return 0;
            default: assert(0);
        }
    };
    RotationPoly nor2 = ctx.genrate_lut(fnor2);

    auto fxor2 = [](long i, long t) -> long {
        switch (i) {
            case 0:  return 0;
            case 1:  return 1;
            case 2:  return 1;
            case 3:  return 0;
            default: assert(0);
        }
    };
    RotationPoly xor2 = ctx.genrate_lut(fxor2);

    auto fxnor2 = [](long i, long t) -> long {
        switch (i) {
            case 0:  return 1;
            case 1:  return 0;
            case 2:  return 0;
            case 3:  return 1;
            default: assert(0);
        }
    };
    RotationPoly xnor2 = ctx.genrate_lut(fxnor2);

    std::cerr << "\rLUT0   ";
    Ciphertext gin0 = 2 * ct_num11 + ct_num12;
    Ciphertext gout0 = ctx.eval_lut(&gin0, nor2);
    std::cerr << "\rLUT1   ";
    Ciphertext gin1 = 2 * ct_num5 + ct_num4;
    Ciphertext gout1 = ctx.eval_lut(&gin1, nor2);
    std::cerr << "\rINV2   ";
    Ciphertext gout2 = 1 - ct_num10;

    std::cerr << "\rINV3   ";
    Ciphertext gout3 = 1 - ct_num9;

    std::cerr << "\rLUT4   ";
    Ciphertext gin4 = 2 * ct_num9 + ct_num8;
    Ciphertext gout4 = ctx.eval_lut(&gin4, nor2);
    std::cerr << "\rINV5   ";
    Ciphertext gout5 = 1 - ct_num0;

    std::cerr << "\rLUT6   ";
    Ciphertext gin6 = 2 * ct_num13 + ct_num12;
    Ciphertext gout6 = ctx.eval_lut(&gin6, or2);
    std::cerr << "\rINV7   ";
    Ciphertext gout7 = 1 - ct_num15;

    std::cerr << "\rINV8   ";
    Ciphertext gout8 = 1 - ct_num3;

    std::cerr << "\rINV9   ";
    Ciphertext gout9 = 1 - ct_num11;

    std::cerr << "\rLUT10   ";
    Ciphertext gin10 = 2 * ct_num14 + ct_num15;
    Ciphertext gout10 = ctx.eval_lut(&gin10, nor2);
    std::cerr << "\rINV11   ";
    Ciphertext gout11 = 1 - ct_num5;

    std::cerr << "\rLUT12   ";
    Ciphertext gin12 = 2 * ct_num7 + ct_num6;
    Ciphertext gout12 = ctx.eval_lut(&gin12, or2);
    std::cerr << "\rLUT13   ";
    Ciphertext gin13 = 2 * (1 - ct_num15) + ct_num13;
    Ciphertext gout13 = ctx.eval_lut(&gin13, and2);
    std::cerr << "\rINV14   ";
    Ciphertext gout14 = 1 - ct_num6;

    std::cerr << "\rLUT15   ";
    Ciphertext gin15 = 2 * ct_num2 + ct_num3;
    Ciphertext gout15 = ctx.eval_lut(&gin15, nor2);
    std::cerr << "\rLUT16   ";
    Ciphertext gin16 = 2 * ct_num2 + ct_num1;
    Ciphertext gout16 = ctx.eval_lut(&gin16, nor2);
    std::cerr << "\rLUT17   ";
    Ciphertext gin17 = 2 * ct_num9 + ct_num8;
    Ciphertext gout17 = ctx.eval_lut(&gin17, nand2);
    std::cerr << "\rLUT18   ";
    Ciphertext gin18 = 2 * (1 - ct_num14) + ct_num15;
    Ciphertext gout18 = ctx.eval_lut(&gin18, or2);
    std::cerr << "\rINV19   ";
    Ciphertext gout19 = 1 - ct_num4;

    std::cerr << "\rINV20   ";
    Ciphertext gout20 = 1 - ct_num12;

    std::cerr << "\rLUT21   ";
    Ciphertext gin21 = 2 * (1 - ct_num3) + ct_num2;
    Ciphertext gout21 = ctx.eval_lut(&gin21, and2);
    std::cerr << "\rLUT22   ";
    Ciphertext gin22 = 2 * gout2 + gout0;
    Ciphertext gout22 = ctx.eval_lut(&gin22, nand2);
    std::cerr << "\rLUT23   ";
    Ciphertext gin23 = 2 * ct_num6 + gout1;
    Ciphertext gout23 = ctx.eval_lut(&gin23, xnor2);
    std::cerr << "\rLUT24   ";
    Ciphertext gin24 = 2 * gout10 + gout6;
    Ciphertext gout24 = ctx.eval_lut(&gin24, nand2);
    std::cerr << "\rLUT25   ";
    Ciphertext gin25 = 2 * gout19 + gout15;
    Ciphertext gout25 = ctx.eval_lut(&gin25, xnor2);
    std::cerr << "\rLUT26   ";
    Ciphertext gin26 = 2 * ct_num12 + gout10;
    Ciphertext gout26 = ctx.eval_lut(&gin26, nand2);
    std::cerr << "\rINV27   ";
    Ciphertext gout27 = 1 - gout4;

    std::cerr << "\rLUT28   ";
    Ciphertext gin28 = 2 * gout20 + gout10;
    Ciphertext gout28 = ctx.eval_lut(&gin28, nand2);
    std::cerr << "\rINV29   ";
    Ciphertext gout29 = 1 - gout18;

    std::cerr << "\rLUT30   ";
    Ciphertext gin30 = 2 * gout10 + gout13;
    Ciphertext gout30 = ctx.eval_lut(&gin30, or2);
    std::cerr << "\rLUT31   ";
    Ciphertext gin31 = 2 * gout5 + gout16;
    Ciphertext gout31 = ctx.eval_lut(&gin31, nand2);
    std::cerr << "\rINV32   ";
    Ciphertext gout32 = 1 - gout24;

    std::cerr << "\rLUT33   ";
    Ciphertext gin33 = 2 * ct_num13 + gout28;
    Ciphertext gout33 = ctx.eval_lut(&gin33, and2);
    std::cerr << "\rLUT34   ";
    Ciphertext gin34 = 2 * gout26 + gout22;
    Ciphertext gout34 = ctx.eval_lut(&gin34, nand2);
    std::cerr << "\rLUT35   ";
    Ciphertext gin35 = 2 * gout18 + gout33;
    Ciphertext gout35 = ctx.eval_lut(&gin35, nand2);
    std::cerr << "\rLUT36   ";
    Ciphertext gin36 = 2 * gout35 + gout34;
    Ciphertext gout36 = ctx.eval_lut(&gin36, nand2);
    std::cerr << "\rLUT37   ";
    Ciphertext gin37 = 2 * gout36 + gout30;
    Ciphertext gout37 = ctx.eval_lut(&gin37, and2);
    std::cerr << "\rLUT38   ";
    Ciphertext gin38 = 2 * gout36 + gout24;
    Ciphertext gout38 = ctx.eval_lut(&gin38, or2);
    std::cerr << "\rLUT39   ";
    Ciphertext gin39 = 2 * gout2 + gout37;
    Ciphertext gout39 = ctx.eval_lut(&gin39, and2);
    std::cerr << "\rIMUX40  ";
    Ciphertext gin40A = 2 * gout37 + ct_num10;
    Ciphertext gout40A = ctx.eval_lut(&gin40A, and2);
    Ciphertext gin40B = 2 * gout4 + (1 - ct_num10);
    Ciphertext gout40B = ctx.eval_lut(&gin40B, and2);
    Ciphertext gout40 = gout40A + gout40B;
    std::cerr << "\rINV41   ";
    Ciphertext gout41 = 1 - gout37;

    std::cerr << "\rLUT42   ";
    Ciphertext gin42 = 2 * (1 - gout33) + gout37;
    Ciphertext gout42 = ctx.eval_lut(&gin42, or2);
    std::cerr << "\rINV43   ";
    Ciphertext gout43 = 1 - gout40;

    std::cerr << "\rLUT44   ";
    Ciphertext gin44 = 2 * gout9 + gout39;
    Ciphertext gout44 = ctx.eval_lut(&gin44, nand2);
    std::cerr << "\rLUT45   ";
    Ciphertext gin45 = 2 * ct_num11 + gout39;
    Ciphertext gout45 = ctx.eval_lut(&gin45, xnor2);
    std::cerr << "\rLUT46   ";
    Ciphertext gin46 = 2 * gout44 + gout38;
    Ciphertext gout46 = ctx.eval_lut(&gin46, and2);
    std::cerr << "\rLUT47   ";
    Ciphertext gin47 = 2 * gout24 + gout45;
    Ciphertext gout47 = ctx.eval_lut(&gin47, xnor2);
    std::cerr << "\rLUT48   ";
    Ciphertext gin48 = 2 * gout32 + gout45;
    Ciphertext gout48 = ctx.eval_lut(&gin48, or2);
    std::cerr << "\rINV49   ";
    Ciphertext gout49 = 1 - gout45;

    std::cerr << "\rLUT50   ";
    Ciphertext gin50 = 2 * ct_num12 + gout46;
    Ciphertext gout50 = ctx.eval_lut(&gin50, xnor2);
    std::cerr << "\rLUT51   ";
    Ciphertext gin51 = 2 * gout47 + gout43;
    Ciphertext gout51 = ctx.eval_lut(&gin51, nand2);
    std::cerr << "\rLUT52   ";
    Ciphertext gin52 = 2 * gout47 + gout40;
    Ciphertext gout52 = ctx.eval_lut(&gin52, xnor2);
    std::cerr << "\rLUT53   ";
    Ciphertext gin53 = 2 * gout29 + gout50;
    Ciphertext gout53 = ctx.eval_lut(&gin53, xnor2);
    std::cerr << "\rLUT54   ";
    Ciphertext gin54 = 2 * gout18 + gout50;
    Ciphertext gout54 = ctx.eval_lut(&gin54, nand2);
    std::cerr << "\rLUT55   ";
    Ciphertext gin55 = 2 * gout48 + gout51;
    Ciphertext gout55 = ctx.eval_lut(&gin55, nand2);
    std::cerr << "\rLUT56   ";
    Ciphertext gin56 = 2 * (1 - gout50) + gout42;
    Ciphertext gout56 = ctx.eval_lut(&gin56, and2);
    std::cerr << "\rLUT57   ";
    Ciphertext gin57 = 2 * gout54 + gout42;
    Ciphertext gout57 = ctx.eval_lut(&gin57, and2);
    std::cerr << "\rLUT58   ";
    Ciphertext gin58 = 2 * gout53 + gout55;
    Ciphertext gout58 = ctx.eval_lut(&gin58, xnor2);
    std::cerr << "\rLUT59   ";
    Ciphertext gin59 = 2 * gout53 + gout55;
    Ciphertext gout59 = ctx.eval_lut(&gin59, nand2);
    std::cerr << "\rLUT60   ";
    Ciphertext gin60 = 2 * gout59 + gout57;
    Ciphertext gout60 = ctx.eval_lut(&gin60, nand2);
    std::cerr << "\rLUT61   ";
    Ciphertext gin61 = 2 * gout7 + gout60;
    Ciphertext gout61 = ctx.eval_lut(&gin61, nand2);
    std::cerr << "\rLUT62   ";
    Ciphertext gin62 = 2 * gout3 + gout61;
    Ciphertext gout62 = ctx.eval_lut(&gin62, nand2);
    std::cerr << "\rINV63   ";
    Ciphertext gout63 = 1 - gout61;

    std::cerr << "\rIMUX64  ";
    Ciphertext gin64A = 2 * gout37 + gout61;
    Ciphertext gout64A = ctx.eval_lut(&gin64A, and2);
    Ciphertext gin64B = 2 * gout4 + (1 - gout61);
    Ciphertext gout64B = ctx.eval_lut(&gin64B, and2);
    Ciphertext gout64 = gout64A + gout64B;
    std::cerr << "\rIMUX65  ";
    Ciphertext gin65A = 2 * gout61 + ct_num8;
    Ciphertext gout65A = ctx.eval_lut(&gin65A, and2);
    Ciphertext gin65B = 2 * gout12 + (1 - ct_num8);
    Ciphertext gout65B = ctx.eval_lut(&gin65B, and2);
    Ciphertext gout65 = gout65A + gout65B;
    std::cerr << "\rIMUX66  ";
    Ciphertext gin66A = 2 * gout49 + gout61;
    Ciphertext gout66A = ctx.eval_lut(&gin66A, and2);
    Ciphertext gin66B = 2 * gout52 + (1 - gout61);
    Ciphertext gout66B = ctx.eval_lut(&gin66B, and2);
    Ciphertext gout66 = gout66A + gout66B;
    std::cerr << "\rIMUX67  ";
    Ciphertext gin67A = 2 * gout58 + gout63;
    Ciphertext gout67A = ctx.eval_lut(&gin67A, and2);
    Ciphertext gin67B = 2 * gout56 + (1 - gout63);
    Ciphertext gout67B = ctx.eval_lut(&gin67B, and2);
    Ciphertext gout67 = gout67A + gout67B;
    std::cerr << "\rLUT68   ";
    Ciphertext gin68 = 2 * gout18 + gout66;
    Ciphertext gout68 = ctx.eval_lut(&gin68, nand2);
    std::cerr << "\rLUT69   ";
    Ciphertext gin69 = 2 * gout29 + gout66;
    Ciphertext gout69 = ctx.eval_lut(&gin69, xnor2);
    std::cerr << "\rLUT70   ";
    Ciphertext gin70 = 2 * gout27 + gout63;
    Ciphertext gout70 = ctx.eval_lut(&gin70, and2);
    std::cerr << "\rLUT71   ";
    Ciphertext gin71 = 2 * gout2 + gout64;
    Ciphertext gout71 = ctx.eval_lut(&gin71, xnor2);
    std::cerr << "\rLUT72   ";
    Ciphertext gin72 = 2 * gout68 + gout67;
    Ciphertext gout72 = ctx.eval_lut(&gin72, and2);
    std::cerr << "\rLUT73   ";
    Ciphertext gin73 = 2 * gout70 + gout17;
    Ciphertext gout73 = ctx.eval_lut(&gin73, nand2);
    std::cerr << "\rLUT74   ";
    Ciphertext gin74 = 2 * gout32 + gout71;
    Ciphertext gout74 = ctx.eval_lut(&gin74, xnor2);
    std::cerr << "\rLUT75   ";
    Ciphertext gin75 = 2 * gout24 + gout71;
    Ciphertext gout75 = ctx.eval_lut(&gin75, nand2);
    std::cerr << "\rLUT76   ";
    Ciphertext gin76 = 2 * gout73 + gout62;
    Ciphertext gout76 = ctx.eval_lut(&gin76, and2);
    std::cerr << "\rLUT77   ";
    Ciphertext gin77 = 2 * gout73 + gout62;
    Ciphertext gout77 = ctx.eval_lut(&gin77, nand2);
    std::cerr << "\rINV78   ";
    Ciphertext gout78 = 1 - gout74;

    std::cerr << "\rLUT79   ";
    Ciphertext gin79 = 2 * gout37 + gout76;
    Ciphertext gout79 = ctx.eval_lut(&gin79, xnor2);
    std::cerr << "\rLUT80   ";
    Ciphertext gin80 = 2 * gout41 + gout76;
    Ciphertext gout80 = ctx.eval_lut(&gin80, nand2);
    std::cerr << "\rLUT81   ";
    Ciphertext gin81 = 2 * gout37 + gout77;
    Ciphertext gout81 = ctx.eval_lut(&gin81, nand2);
    std::cerr << "\rLUT82   ";
    Ciphertext gin82 = 2 * gout81 + gout65;
    Ciphertext gout82 = ctx.eval_lut(&gin82, nand2);
    std::cerr << "\rLUT83   ";
    Ciphertext gin83 = 2 * gout65 + gout79;
    Ciphertext gout83 = ctx.eval_lut(&gin83, xnor2);
    std::cerr << "\rLUT84   ";
    Ciphertext gin84 = 2 * gout80 + gout82;
    Ciphertext gout84 = ctx.eval_lut(&gin84, and2);
    std::cerr << "\rLUT85   ";
    Ciphertext gin85 = 2 * gout74 + gout84;
    Ciphertext gout85 = ctx.eval_lut(&gin85, xnor2);
    std::cerr << "\rLUT86   ";
    Ciphertext gin86 = 2 * gout78 + gout84;
    Ciphertext gout86 = ctx.eval_lut(&gin86, or2);
    std::cerr << "\rLUT87   ";
    Ciphertext gin87 = 2 * gout75 + gout86;
    Ciphertext gout87 = ctx.eval_lut(&gin87, nand2);
    std::cerr << "\rLUT88   ";
    Ciphertext gin88 = 2 * gout69 + gout87;
    Ciphertext gout88 = ctx.eval_lut(&gin88, xor2);
    std::cerr << "\rLUT89   ";
    Ciphertext gin89 = 2 * gout69 + gout87;
    Ciphertext gout89 = ctx.eval_lut(&gin89, nand2);
    std::cerr << "\rLUT90   ";
    Ciphertext gin90 = 2 * gout89 + gout72;
    Ciphertext gout90 = ctx.eval_lut(&gin90, nand2);
    std::cerr << "\rLUT91   ";
    Ciphertext gin91 = 2 * gout61 + gout90;
    Ciphertext gout91 = ctx.eval_lut(&gin91, or2);
    std::cerr << "\rLUT92   ";
    Ciphertext gin92 = 2 * gout7 + gout90;
    Ciphertext gout92 = ctx.eval_lut(&gin92, nand2);
    std::cerr << "\rIMUX93  ";
    Ciphertext gin93A = 2 * gout66 + gout92;
    Ciphertext gout93A = ctx.eval_lut(&gin93A, and2);
    Ciphertext gin93B = 2 * gout88 + (1 - gout92);
    Ciphertext gout93B = ctx.eval_lut(&gin93B, and2);
    Ciphertext gout93 = gout93A + gout93B;
    std::cerr << "\rLUT94   ";
    Ciphertext gin94 = 2 * (1 - gout92) + gout14;
    Ciphertext gout94 = ctx.eval_lut(&gin94, and2);
    std::cerr << "\rLUT95   ";
    Ciphertext gin95 = 2 * gout14 + gout92;
    Ciphertext gout95 = ctx.eval_lut(&gin95, xnor2);
    std::cerr << "\rINV96   ";
    Ciphertext gout96 = 1 - gout92;

    std::cerr << "\rIMUX97  ";
    Ciphertext gin97A = 2 * gout71 + gout92;
    Ciphertext gout97A = ctx.eval_lut(&gin97A, and2);
    Ciphertext gin97B = 2 * gout85 + (1 - gout92);
    Ciphertext gout97B = ctx.eval_lut(&gin97B, and2);
    Ciphertext gout97 = gout97A + gout97B;
    std::cerr << "\rIMUX98  ";
    Ciphertext gin98A = 2 * gout77 + gout92;
    Ciphertext gout98A = ctx.eval_lut(&gin98A, and2);
    Ciphertext gin98B = 2 * gout83 + (1 - gout92);
    Ciphertext gout98B = ctx.eval_lut(&gin98B, and2);
    Ciphertext gout98 = gout98A + gout98B;
    std::cerr << "\rLUT99   ";
    Ciphertext gin99 = 2 * gout12 + gout92;
    Ciphertext gout99 = ctx.eval_lut(&gin99, or2);
    std::cerr << "\rLUT100   ";
    Ciphertext gin100 = 2 * gout29 + gout97;
    Ciphertext gout100 = ctx.eval_lut(&gin100, xnor2);
    std::cerr << "\rLUT101   ";
    Ciphertext gin101 = 2 * gout32 + gout98;
    Ciphertext gout101 = ctx.eval_lut(&gin101, xnor2);
    std::cerr << "\rLUT102   ";
    Ciphertext gin102 = 2 * gout18 + gout97;
    Ciphertext gout102 = ctx.eval_lut(&gin102, nand2);
    std::cerr << "\rLUT103   ";
    Ciphertext gin103 = 2 * ct_num7 + gout94;
    Ciphertext gout103 = ctx.eval_lut(&gin103, xnor2);
    std::cerr << "\rLUT104   ";
    Ciphertext gin104 = 2 * gout32 + gout98;
    Ciphertext gout104 = ctx.eval_lut(&gin104, or2);
    std::cerr << "\rINV105   ";
    Ciphertext gout105 = 1 - gout97;

    std::cerr << "\rIMUX106  ";
    Ciphertext gin106A = 2 * gout96 + ct_num6;
    Ciphertext gout106A = ctx.eval_lut(&gin106A, and2);
    Ciphertext gin106B = 2 * gout1 + (1 - ct_num6);
    Ciphertext gout106B = ctx.eval_lut(&gin106B, and2);
    Ciphertext gout106 = gout106A + gout106B;
    std::cerr << "\rLUT107   ";
    Ciphertext gin107 = 2 * gout99 + gout91;
    Ciphertext gout107 = ctx.eval_lut(&gin107, and2);
    std::cerr << "\rLUT108   ";
    Ciphertext gin108 = 2 * gout63 + gout103;
    Ciphertext gout108 = ctx.eval_lut(&gin108, or2);
    std::cerr << "\rINV109   ";
    Ciphertext gout109 = 1 - gout106;

    std::cerr << "\rLUT110   ";
    Ciphertext gin110 = 2 * ct_num8 + gout107;
    Ciphertext gout110 = ctx.eval_lut(&gin110, xnor2);
    std::cerr << "\rINV111   ";
    Ciphertext gout111 = 1 - gout103;

    std::cerr << "\rLUT112   ";
    Ciphertext gin112 = 2 * (1 - gout93) + gout102;
    Ciphertext gout112 = ctx.eval_lut(&gin112, and2);
    std::cerr << "\rLUT113   ";
    Ciphertext gin113 = 2 * gout61 + gout103;
    Ciphertext gout113 = ctx.eval_lut(&gin113, xnor2);
    std::cerr << "\rINV114   ";
    Ciphertext gout114 = 1 - gout110;

    std::cerr << "\rLUT115   ";
    Ciphertext gin115 = 2 * gout41 + gout110;
    Ciphertext gout115 = ctx.eval_lut(&gin115, nand2);
    std::cerr << "\rLUT116   ";
    Ciphertext gin116 = 2 * gout113 + gout106;
    Ciphertext gout116 = ctx.eval_lut(&gin116, xnor2);
    std::cerr << "\rLUT117   ";
    Ciphertext gin117 = 2 * gout37 + gout110;
    Ciphertext gout117 = ctx.eval_lut(&gin117, xnor2);
    std::cerr << "\rLUT118   ";
    Ciphertext gin118 = 2 * gout113 + gout109;
    Ciphertext gout118 = ctx.eval_lut(&gin118, nand2);
    std::cerr << "\rLUT119   ";
    Ciphertext gin119 = 2 * gout108 + gout118;
    Ciphertext gout119 = ctx.eval_lut(&gin119, nand2);
    std::cerr << "\rLUT120   ";
    Ciphertext gin120 = 2 * gout119 + gout117;
    Ciphertext gout120 = ctx.eval_lut(&gin120, nand2);
    std::cerr << "\rLUT121   ";
    Ciphertext gin121 = 2 * gout119 + gout117;
    Ciphertext gout121 = ctx.eval_lut(&gin121, xnor2);
    std::cerr << "\rLUT122   ";
    Ciphertext gin122 = 2 * gout115 + gout120;
    Ciphertext gout122 = ctx.eval_lut(&gin122, and2);
    std::cerr << "\rLUT123   ";
    Ciphertext gin123 = 2 * gout101 + gout122;
    Ciphertext gout123 = ctx.eval_lut(&gin123, or2);
    std::cerr << "\rLUT124   ";
    Ciphertext gin124 = 2 * gout101 + gout122;
    Ciphertext gout124 = ctx.eval_lut(&gin124, xnor2);
    std::cerr << "\rLUT125   ";
    Ciphertext gin125 = 2 * gout104 + gout123;
    Ciphertext gout125 = ctx.eval_lut(&gin125, nand2);
    std::cerr << "\rLUT126   ";
    Ciphertext gin126 = 2 * gout100 + gout125;
    Ciphertext gout126 = ctx.eval_lut(&gin126, xnor2);
    std::cerr << "\rLUT127   ";
    Ciphertext gin127 = 2 * gout100 + gout125;
    Ciphertext gout127 = ctx.eval_lut(&gin127, nand2);
    std::cerr << "\rLUT128   ";
    Ciphertext gin128 = 2 * gout127 + gout112;
    Ciphertext gout128 = ctx.eval_lut(&gin128, nand2);
    std::cerr << "\rLUT129   ";
    Ciphertext gin129 = 2 * gout7 + gout128;
    Ciphertext gout129 = ctx.eval_lut(&gin129, nand2);
    std::cerr << "\rLUT130   ";
    Ciphertext gin130 = 2 * gout129 + gout31;
    Ciphertext gout130 = ctx.eval_lut(&gin130, or2);
    std::cerr << "\rLUT131   ";
    Ciphertext gin131 = 2 * gout129 + gout31;
    Ciphertext gout131 = ctx.eval_lut(&gin131, nand2);
    std::cerr << "\rLUT132   ";
    Ciphertext gin132 = 2 * ct_num4 + gout129;
    Ciphertext gout132 = ctx.eval_lut(&gin132, xnor2);
    std::cerr << "\rIMUX133  ";
    Ciphertext gin133A = 2 * gout105 + gout129;
    Ciphertext gout133A = ctx.eval_lut(&gin133A, and2);
    Ciphertext gin133B = 2 * gout126 + (1 - gout129);
    Ciphertext gout133B = ctx.eval_lut(&gin133B, and2);
    Ciphertext gout133 = gout133A + gout133B;
    std::cerr << "\rIMUX134  ";
    Ciphertext gin134A = 2 * gout114 + gout129;
    Ciphertext gout134A = ctx.eval_lut(&gin134A, and2);
    Ciphertext gin134B = 2 * gout121 + (1 - gout129);
    Ciphertext gout134B = ctx.eval_lut(&gin134B, and2);
    Ciphertext gout134 = gout134A + gout134B;
    std::cerr << "\rLUT135   ";
    Ciphertext gin135 = 2 * (1 - gout129) + gout19;
    Ciphertext gout135 = ctx.eval_lut(&gin135, and2);
    std::cerr << "\rIMUX136  ";
    Ciphertext gin136A = 2 * gout111 + gout129;
    Ciphertext gout136A = ctx.eval_lut(&gin136A, and2);
    Ciphertext gin136B = 2 * gout116 + (1 - gout129);
    Ciphertext gout136B = ctx.eval_lut(&gin136B, and2);
    Ciphertext gout136 = gout136A + gout136B;
    std::cerr << "\rINV137   ";
    Ciphertext gout137 = 1 - gout129;

    std::cerr << "\rIMUX138  ";
    Ciphertext gin138A = 2 * gout95 + gout129;
    Ciphertext gout138A = ctx.eval_lut(&gin138A, and2);
    Ciphertext gin138B = 2 * gout23 + (1 - gout129);
    Ciphertext gout138B = ctx.eval_lut(&gin138B, and2);
    Ciphertext gout138 = gout138A + gout138B;
    std::cerr << "\rIMUX139  ";
    Ciphertext gin139A = 2 * gout98 + gout129;
    Ciphertext gout139A = ctx.eval_lut(&gin139A, and2);
    Ciphertext gin139B = 2 * gout124 + (1 - gout129);
    Ciphertext gout139B = ctx.eval_lut(&gin139B, and2);
    Ciphertext gout139 = gout139A + gout139B;
    std::cerr << "\rLUT140   ";
    Ciphertext gin140 = 2 * gout11 + gout135;
    Ciphertext gout140 = ctx.eval_lut(&gin140, xnor2);
    std::cerr << "\rIMUX141  ";
    Ciphertext gin141A = 2 * gout137 + ct_num4;
    Ciphertext gout141A = ctx.eval_lut(&gin141A, and2);
    Ciphertext gin141B = 2 * gout15 + (1 - ct_num4);
    Ciphertext gout141B = ctx.eval_lut(&gin141B, and2);
    Ciphertext gout141 = gout141A + gout141B;
    std::cerr << "\rLUT142   ";
    Ciphertext gin142 = 2 * gout24 + gout134;
    Ciphertext gout142 = ctx.eval_lut(&gin142, xnor2);
    std::cerr << "\rLUT143   ";
    Ciphertext gin143 = 2 * gout18 + gout139;
    Ciphertext gout143 = ctx.eval_lut(&gin143, xnor2);
    std::cerr << "\rLUT144   ";
    Ciphertext gin144 = 2 * gout41 + gout136;
    Ciphertext gout144 = ctx.eval_lut(&gin144, nand2);
    std::cerr << "\rLUT145   ";
    Ciphertext gin145 = 2 * gout32 + gout134;
    Ciphertext gout145 = ctx.eval_lut(&gin145, or2);
    std::cerr << "\rLUT146   ";
    Ciphertext gin146 = 2 * gout63 + gout138;
    Ciphertext gout146 = ctx.eval_lut(&gin146, or2);
    std::cerr << "\rLUT147   ";
    Ciphertext gin147 = 2 * gout37 + gout136;
    Ciphertext gout147 = ctx.eval_lut(&gin147, xnor2);
    std::cerr << "\rLUT148   ";
    Ciphertext gin148 = 2 * gout61 + gout138;
    Ciphertext gout148 = ctx.eval_lut(&gin148, xnor2);
    std::cerr << "\rLUT149   ";
    Ciphertext gin149 = 2 * gout29 + gout139;
    Ciphertext gout149 = ctx.eval_lut(&gin149, or2);
    std::cerr << "\rLUT150   ";
    Ciphertext gin150 = 2 * gout139 + gout133;
    Ciphertext gout150 = ctx.eval_lut(&gin150, nand2);
    std::cerr << "\rLUT151   ";
    Ciphertext gin151 = 2 * gout92 + gout140;
    Ciphertext gout151 = ctx.eval_lut(&gin151, nand2);
    std::cerr << "\rLUT152   ";
    Ciphertext gin152 = 2 * gout96 + gout140;
    Ciphertext gout152 = ctx.eval_lut(&gin152, xnor2);
    std::cerr << "\rINV153   ";
    Ciphertext gout153 = 1 - gout147;

    std::cerr << "\rINV154   ";
    Ciphertext gout154 = 1 - gout141;

    std::cerr << "\rLUT155   ";
    Ciphertext gin155 = 2 * gout149 + gout133;
    Ciphertext gout155 = ctx.eval_lut(&gin155, and2);
    std::cerr << "\rINV156   ";
    Ciphertext gout156 = 1 - gout148;

    std::cerr << "\rLUT157   ";
    Ciphertext gin157 = 2 * gout152 + gout141;
    Ciphertext gout157 = ctx.eval_lut(&gin157, xnor2);
    std::cerr << "\rLUT158   ";
    Ciphertext gin158 = 2 * gout152 + gout154;
    Ciphertext gout158 = ctx.eval_lut(&gin158, nand2);
    std::cerr << "\rLUT159   ";
    Ciphertext gin159 = 2 * gout151 + gout158;
    Ciphertext gout159 = ctx.eval_lut(&gin159, and2);
    std::cerr << "\rLUT160   ";
    Ciphertext gin160 = 2 * gout156 + gout159;
    Ciphertext gout160 = ctx.eval_lut(&gin160, xnor2);
    std::cerr << "\rLUT161   ";
    Ciphertext gin161 = 2 * gout156 + gout159;
    Ciphertext gout161 = ctx.eval_lut(&gin161, or2);
    std::cerr << "\rLUT162   ";
    Ciphertext gin162 = 2 * gout146 + gout161;
    Ciphertext gout162 = ctx.eval_lut(&gin162, and2);
    std::cerr << "\rLUT163   ";
    Ciphertext gin163 = 2 * gout153 + gout162;
    Ciphertext gout163 = ctx.eval_lut(&gin163, or2);
    std::cerr << "\rLUT164   ";
    Ciphertext gin164 = 2 * gout147 + gout162;
    Ciphertext gout164 = ctx.eval_lut(&gin164, xnor2);
    std::cerr << "\rLUT165   ";
    Ciphertext gin165 = 2 * gout144 + gout163;
    Ciphertext gout165 = ctx.eval_lut(&gin165, nand2);
    std::cerr << "\rLUT166   ";
    Ciphertext gin166 = 2 * gout165 + gout142;
    Ciphertext gout166 = ctx.eval_lut(&gin166, nand2);
    std::cerr << "\rLUT167   ";
    Ciphertext gin167 = 2 * gout165 + gout142;
    Ciphertext gout167 = ctx.eval_lut(&gin167, xnor2);
    std::cerr << "\rLUT168   ";
    Ciphertext gin168 = 2 * gout145 + gout166;
    Ciphertext gout168 = ctx.eval_lut(&gin168, nand2);
    std::cerr << "\rLUT169   ";
    Ciphertext gin169 = 2 * gout143 + gout168;
    Ciphertext gout169 = ctx.eval_lut(&gin169, xor2);
    std::cerr << "\rLUT170   ";
    Ciphertext gin170 = 2 * gout143 + gout168;
    Ciphertext gout170 = ctx.eval_lut(&gin170, nand2);
    std::cerr << "\rLUT171   ";
    Ciphertext gin171 = 2 * gout170 + gout155;
    Ciphertext gout171 = ctx.eval_lut(&gin171, nand2);
    std::cerr << "\rLUT172   ";
    Ciphertext gin172 = 2 * gout7 + gout171;
    Ciphertext gout172 = ctx.eval_lut(&gin172, nand2);
    std::cerr << "\rIMUX173  ";
    Ciphertext gin173A = 2 * gout134 + gout172;
    Ciphertext gout173A = ctx.eval_lut(&gin173A, and2);
    Ciphertext gin173B = 2 * gout167 + (1 - gout172);
    Ciphertext gout173B = ctx.eval_lut(&gin173B, and2);
    Ciphertext gout173 = gout173A + gout173B;
    std::cerr << "\rINV174   ";
    Ciphertext gout174 = 1 - gout172;

    std::cerr << "\rIMUX175  ";
    Ciphertext gin175A = 2 * gout138 + gout172;
    Ciphertext gout175A = ctx.eval_lut(&gin175A, and2);
    Ciphertext gin175B = 2 * gout160 + (1 - gout172);
    Ciphertext gout175B = ctx.eval_lut(&gin175B, and2);
    Ciphertext gout175 = gout175A + gout175B;
    std::cerr << "\rIMUX176  ";
    Ciphertext gin176A = 2 * gout140 + gout172;
    Ciphertext gout176A = ctx.eval_lut(&gin176A, and2);
    Ciphertext gin176B = 2 * gout157 + (1 - gout172);
    Ciphertext gout176B = ctx.eval_lut(&gin176B, and2);
    Ciphertext gout176 = gout176A + gout176B;
    std::cerr << "\rLUT177   ";
    Ciphertext gin177 = 2 * gout8 + gout172;
    Ciphertext gout177 = ctx.eval_lut(&gin177, xnor2);
    std::cerr << "\rIMUX178  ";
    Ciphertext gin178A = 2 * gout136 + gout172;
    Ciphertext gout178A = ctx.eval_lut(&gin178A, and2);
    Ciphertext gin178B = 2 * gout164 + (1 - gout172);
    Ciphertext gout178B = ctx.eval_lut(&gin178B, and2);
    Ciphertext gout178 = gout178A + gout178B;
    std::cerr << "\rIMUX179  ";
    Ciphertext gin179A = 2 * gout132 + gout172;
    Ciphertext gout179A = ctx.eval_lut(&gin179A, and2);
    Ciphertext gin179B = 2 * gout25 + (1 - gout172);
    Ciphertext gout179B = ctx.eval_lut(&gin179B, and2);
    Ciphertext gout179 = gout179A + gout179B;
    std::cerr << "\rLUT180   ";
    Ciphertext gin180 = 2 * (1 - gout172) + gout21;
    Ciphertext gout180 = ctx.eval_lut(&gin180, and2);
    std::cerr << "\rIMUX181  ";
    Ciphertext gin181A = 2 * gout150 + gout172;
    Ciphertext gout181A = ctx.eval_lut(&gin181A, and2);
    Ciphertext gin181B = 2 * gout169 + (1 - gout172);
    Ciphertext gout181B = ctx.eval_lut(&gin181B, and2);
    Ciphertext gout181 = gout181A + gout181B;
    std::cerr << "\rLUT182   ";
    Ciphertext gin182 = 2 * gout29 + gout173;
    Ciphertext gout182 = ctx.eval_lut(&gin182, or2);
    std::cerr << "\rLUT183   ";
    Ciphertext gin183 = 2 * gout37 + gout175;
    Ciphertext gout183 = ctx.eval_lut(&gin183, or2);
    std::cerr << "\rLUT184   ";
    Ciphertext gin184 = 2 * gout92 + gout179;
    Ciphertext gout184 = ctx.eval_lut(&gin184, nand2);
    std::cerr << "\rLUT185   ";
    Ciphertext gin185 = 2 * gout29 + gout173;
    Ciphertext gout185 = ctx.eval_lut(&gin185, nand2);
    std::cerr << "\rLUT186   ";
    Ciphertext gin186 = 2 * gout37 + gout175;
    Ciphertext gout186 = ctx.eval_lut(&gin186, nand2);
    std::cerr << "\rLUT187   ";
    Ciphertext gin187 = 2 * gout92 + gout179;
    Ciphertext gout187 = ctx.eval_lut(&gin187, or2);
    std::cerr << "\rLUT188   ";
    Ciphertext gin188 = 2 * gout182 + (1 - gout181);
    Ciphertext gout188 = ctx.eval_lut(&gin188, and2);
    std::cerr << "\rLUT189   ";
    Ciphertext gin189 = 2 * gout131 + gout177;
    Ciphertext gout189 = ctx.eval_lut(&gin189, nand2);
    std::cerr << "\rLUT190   ";
    Ciphertext gin190 = 2 * gout24 + gout178;
    Ciphertext gout190 = ctx.eval_lut(&gin190, or2);
    std::cerr << "\rLUT191   ";
    Ciphertext gin191 = 2 * gout61 + gout176;
    Ciphertext gout191 = ctx.eval_lut(&gin191, or2);
    std::cerr << "\rLUT192   ";
    Ciphertext gin192 = 2 * gout61 + gout176;
    Ciphertext gout192 = ctx.eval_lut(&gin192, nand2);
    std::cerr << "\rLUT193   ";
    Ciphertext gin193 = 2 * gout24 + gout178;
    Ciphertext gout193 = ctx.eval_lut(&gin193, nand2);
    std::cerr << "\rLUT194   ";
    Ciphertext gin194 = 2 * (1 - gout180) + gout130;
    Ciphertext gout194 = ctx.eval_lut(&gin194, and2);
    std::cerr << "\rLUT195   ";
    Ciphertext gin195 = 2 * gout192 + gout184;
    Ciphertext gout195 = ctx.eval_lut(&gin195, and2);
    std::cerr << "\rLUT196   ";
    Ciphertext gin196 = 2 * gout187 + gout194;
    Ciphertext gout196 = ctx.eval_lut(&gin196, and2);
    std::cerr << "\rLUT197   ";
    Ciphertext gin197 = 2 * gout185 + gout190;
    Ciphertext gout197 = ctx.eval_lut(&gin197, and2);
    std::cerr << "\rLUT198   ";
    Ciphertext gin198 = 2 * gout186 + gout191;
    Ciphertext gout198 = ctx.eval_lut(&gin198, and2);
    std::cerr << "\rLUT199   ";
    Ciphertext gin199 = 2 * gout193 + gout183;
    Ciphertext gout199 = ctx.eval_lut(&gin199, and2);
    std::cerr << "\rLUT200   ";
    Ciphertext gin200 = 2 * gout189 + gout196;
    Ciphertext gout200 = ctx.eval_lut(&gin200, nand2);
    std::cerr << "\rLUT201   ";
    Ciphertext gin201 = 2 * gout200 + gout195;
    Ciphertext gout201 = ctx.eval_lut(&gin201, nand2);
    std::cerr << "\rLUT202   ";
    Ciphertext gin202 = 2 * gout201 + gout198;
    Ciphertext gout202 = ctx.eval_lut(&gin202, nand2);
    std::cerr << "\rLUT203   ";
    Ciphertext gin203 = 2 * gout202 + gout199;
    Ciphertext gout203 = ctx.eval_lut(&gin203, nand2);
    std::cerr << "\rLUT204   ";
    Ciphertext gin204 = 2 * gout203 + gout197;
    Ciphertext gout204 = ctx.eval_lut(&gin204, nand2);
    std::cerr << "\rLUT205   ";
    Ciphertext gin205 = 2 * gout204 + gout188;
    Ciphertext gout205 = ctx.eval_lut(&gin205, nand2);
    std::cerr << "\rLUT206   ";
    Ciphertext gin206 = 2 * gout7 + gout205;
    Ciphertext gout206 = ctx.eval_lut(&gin206, and2);

    std::cerr << "\r          \r";
    std::vector<long> test_out;
    test_out.push_back(ctx.decrypt(&gout206)); /* out0 */
    test_out.push_back(ctx.decrypt(&gout174)); /* out1 */
    test_out.push_back(ctx.decrypt(&gout137)); /* out2 */
    test_out.push_back(ctx.decrypt(&gout96)); /* out3 */
    test_out.push_back(ctx.decrypt(&gout63)); /* out4 */
    test_out.push_back(ctx.decrypt(&gout37)); /* out5 */
    test_out.push_back(ctx.decrypt(&gout32)); /* out6 */
    test_out.push_back(ctx.decrypt(&gout29)); /* out7 */
    return test_out;
}

static void
BM_sqrt_boolean(benchmark::State& state)
{
    FHEContext ctx;
    ctx.generate_context(tfhe_11_NTT);
    ctx.set_default_message_encoding_type(partial_domain);
    ctx.set_default_plaintext_space(4);

    for (auto _ : state) {
        test_sqrt_boolean(ctx);
    }
}

BENCHMARK(BM_sqrt_boolean)->Unit(benchmark::kSecond);
BENCHMARK_MAIN();
