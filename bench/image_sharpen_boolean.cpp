#include <benchmark/benchmark.h>
#include "fhe_context.h"
using namespace fhe_deck;


std::vector<long>
test_image_sharpen_boolean(FHEContext& ctx, uint64_t window = 0)
{
    Ciphertext ct_window8 = ctx.encrypt_public((window >> 0) & 1);
    Ciphertext ct_window9 = ctx.encrypt_public((window >> 1) & 1);
    Ciphertext ct_window10 = ctx.encrypt_public((window >> 2) & 1);
    Ciphertext ct_window11 = ctx.encrypt_public((window >> 3) & 1);
    Ciphertext ct_window12 = ctx.encrypt_public((window >> 4) & 1);
    Ciphertext ct_window13 = ctx.encrypt_public((window >> 5) & 1);
    Ciphertext ct_window14 = ctx.encrypt_public((window >> 6) & 1);
    Ciphertext ct_window15 = ctx.encrypt_public((window >> 7) & 1);
    Ciphertext ct_window24 = ctx.encrypt_public((window >> 8) & 1);
    Ciphertext ct_window25 = ctx.encrypt_public((window >> 9) & 1);
    Ciphertext ct_window26 = ctx.encrypt_public((window >> 10) & 1);
    Ciphertext ct_window27 = ctx.encrypt_public((window >> 11) & 1);
    Ciphertext ct_window28 = ctx.encrypt_public((window >> 12) & 1);
    Ciphertext ct_window29 = ctx.encrypt_public((window >> 13) & 1);
    Ciphertext ct_window30 = ctx.encrypt_public((window >> 14) & 1);
    Ciphertext ct_window31 = ctx.encrypt_public((window >> 15) & 1);
    Ciphertext ct_window32 = ctx.encrypt_public((window >> 16) & 1);
    Ciphertext ct_window33 = ctx.encrypt_public((window >> 17) & 1);
    Ciphertext ct_window34 = ctx.encrypt_public((window >> 18) & 1);
    Ciphertext ct_window35 = ctx.encrypt_public((window >> 19) & 1);
    Ciphertext ct_window36 = ctx.encrypt_public((window >> 20) & 1);
    Ciphertext ct_window37 = ctx.encrypt_public((window >> 21) & 1);
    Ciphertext ct_window38 = ctx.encrypt_public((window >> 22) & 1);
    Ciphertext ct_window39 = ctx.encrypt_public((window >> 23) & 1);
    Ciphertext ct_window40 = ctx.encrypt_public((window >> 24) & 1);
    Ciphertext ct_window41 = ctx.encrypt_public((window >> 25) & 1);
    Ciphertext ct_window42 = ctx.encrypt_public((window >> 26) & 1);
    Ciphertext ct_window43 = ctx.encrypt_public((window >> 27) & 1);
    Ciphertext ct_window44 = ctx.encrypt_public((window >> 28) & 1);
    Ciphertext ct_window45 = ctx.encrypt_public((window >> 29) & 1);
    Ciphertext ct_window46 = ctx.encrypt_public((window >> 30) & 1);
    Ciphertext ct_window47 = ctx.encrypt_public((window >> 31) & 1);
    Ciphertext ct_window56 = ctx.encrypt_public((window >> 32) & 1);
    Ciphertext ct_window57 = ctx.encrypt_public((window >> 33) & 1);
    Ciphertext ct_window58 = ctx.encrypt_public((window >> 34) & 1);
    Ciphertext ct_window59 = ctx.encrypt_public((window >> 35) & 1);
    Ciphertext ct_window60 = ctx.encrypt_public((window >> 36) & 1);
    Ciphertext ct_window61 = ctx.encrypt_public((window >> 37) & 1);
    Ciphertext ct_window62 = ctx.encrypt_public((window >> 38) & 1);
    Ciphertext ct_window63 = ctx.encrypt_public((window >> 39) & 1);

    auto fand2 = [](long i, long t) -> long {
        switch (i) {
            case 0:  return 0;
            case 1:  return 0;
            case 2:  return 0;
            case 3:  return 1;
            default: assert(0);
        }
    };
    RotationPoly and2 = ctx.genrate_lut(fand2);

    auto fnand2 = [](long i, long t) -> long {
        switch (i) {
            case 0:  return 1;
            case 1:  return 1;
            case 2:  return 1;
            case 3:  return 0;
            default: assert(0);
        }
    };
    RotationPoly nand2 = ctx.genrate_lut(fnand2);

    auto for2 = [](long i, long t) -> long {
        switch (i) {
            case 0:  return 0;
            case 1:  return 1;
            case 2:  return 1;
            case 3:  return 1;
            default: assert(0);
        }
    };
    RotationPoly or2 = ctx.genrate_lut(for2);

    auto fnor2 = [](long i, long t) -> long {
        switch (i) {
            case 0:  return 1;
            case 1:  return 0;
            case 2:  return 0;
            case 3:  return 0;
            default: assert(0);
        }
    };
    RotationPoly nor2 = ctx.genrate_lut(fnor2);

    auto fxor2 = [](long i, long t) -> long {
        switch (i) {
            case 0:  return 0;
            case 1:  return 1;
            case 2:  return 1;
            case 3:  return 0;
            default: assert(0);
        }
    };
    RotationPoly xor2 = ctx.genrate_lut(fxor2);

    auto fxnor2 = [](long i, long t) -> long {
        switch (i) {
            case 0:  return 1;
            case 1:  return 0;
            case 2:  return 0;
            case 3:  return 1;
            default: assert(0);
        }
    };
    RotationPoly xnor2 = ctx.genrate_lut(fxnor2);

    std::cerr << "\rLUT0   ";
    Ciphertext gin0 = 2 * ct_window8 + ct_window24;
    Ciphertext gout0 = ctx.eval_lut(&gin0, xor2);
    std::cerr << "\rLUT1   ";
    Ciphertext gin1 = 2 * ct_window11 + ct_window27;
    Ciphertext gout1 = ctx.eval_lut(&gin1, xor2);
    std::cerr << "\rLUT2   ";
    Ciphertext gin2 = 2 * ct_window34 + ct_window36;
    Ciphertext gout2 = ctx.eval_lut(&gin2, xor2);
    std::cerr << "\rLUT3   ";
    Ciphertext gin3 = 2 * ct_window43 + ct_window59;
    Ciphertext gout3 = ctx.eval_lut(&gin3, xor2);
    std::cerr << "\rLUT4   ";
    Ciphertext gin4 = 2 * ct_window10 + ct_window26;
    Ciphertext gout4 = ctx.eval_lut(&gin4, xor2);
    std::cerr << "\rINV5   ";
    Ciphertext gout5 = 1 - gout1;

    std::cerr << "\rLUT6   ";
    Ciphertext gin6 = 2 * ct_window47 + ct_window63;
    Ciphertext gout6 = ctx.eval_lut(&gin6, xnor2);
    std::cerr << "\rLUT7   ";
    Ciphertext gin7 = 2 * ct_window37 + ct_window39;
    Ciphertext gout7 = ctx.eval_lut(&gin7, xnor2);
    std::cerr << "\rLUT8   ";
    Ciphertext gin8 = 2 * ct_window34 + ct_window36;
    Ciphertext gout8 = ctx.eval_lut(&gin8, and2);
    std::cerr << "\rLUT9   ";
    Ciphertext gin9 = 2 * ct_window46 + ct_window62;
    Ciphertext gout9 = ctx.eval_lut(&gin9, nand2);
    std::cerr << "\rLUT10   ";
    Ciphertext gin10 = 2 * ct_window44 + ct_window60;
    Ciphertext gout10 = ctx.eval_lut(&gin10, xor2);
    std::cerr << "\rINV11   ";
    Ciphertext gout11 = 1 - ct_window33;

    std::cerr << "\rLUT12   ";
    Ciphertext gin12 = 2 * ct_window36 + ct_window38;
    Ciphertext gout12 = ctx.eval_lut(&gin12, nand2);
    std::cerr << "\rLUT13   ";
    Ciphertext gin13 = 2 * ct_window42 + ct_window58;
    Ciphertext gout13 = ctx.eval_lut(&gin13, nand2);
    std::cerr << "\rINV14   ";
    Ciphertext gout14 = 1 - ct_window32;

    std::cerr << "\rLUT15   ";
    Ciphertext gin15 = 2 * ct_window35 + ct_window37;
    Ciphertext gout15 = ctx.eval_lut(&gin15, xor2);
    std::cerr << "\rLUT16   ";
    Ciphertext gin16 = 2 * ct_window44 + ct_window60;
    Ciphertext gout16 = ctx.eval_lut(&gin16, nand2);
    std::cerr << "\rLUT17   ";
    Ciphertext gin17 = 2 * ct_window43 + ct_window59;
    Ciphertext gout17 = ctx.eval_lut(&gin17, nand2);
    std::cerr << "\rLUT18   ";
    Ciphertext gin18 = 2 * ct_window15 + ct_window31;
    Ciphertext gout18 = ctx.eval_lut(&gin18, xor2);
    std::cerr << "\rLUT19   ";
    Ciphertext gin19 = 2 * ct_window41 + ct_window57;
    Ciphertext gout19 = ctx.eval_lut(&gin19, xor2);
    std::cerr << "\rLUT20   ";
    Ciphertext gin20 = 2 * ct_window45 + ct_window61;
    Ciphertext gout20 = ctx.eval_lut(&gin20, nand2);
    std::cerr << "\rLUT21   ";
    Ciphertext gin21 = 2 * ct_window45 + ct_window61;
    Ciphertext gout21 = ctx.eval_lut(&gin21, xor2);
    std::cerr << "\rLUT22   ";
    Ciphertext gin22 = 2 * ct_window12 + ct_window28;
    Ciphertext gout22 = ctx.eval_lut(&gin22, xor2);
    std::cerr << "\rLUT23   ";
    Ciphertext gin23 = 2 * ct_window32 + ct_window34;
    Ciphertext gout23 = ctx.eval_lut(&gin23, xor2);
    std::cerr << "\rLUT24   ";
    Ciphertext gin24 = 2 * ct_window40 + ct_window56;
    Ciphertext gout24 = ctx.eval_lut(&gin24, and2);
    std::cerr << "\rLUT25   ";
    Ciphertext gin25 = 2 * ct_window46 + ct_window62;
    Ciphertext gout25 = ctx.eval_lut(&gin25, xor2);
    std::cerr << "\rLUT26   ";
    Ciphertext gin26 = 2 * ct_window35 + ct_window37;
    Ciphertext gout26 = ctx.eval_lut(&gin26, and2);
    std::cerr << "\rLUT27   ";
    Ciphertext gin27 = 2 * ct_window41 + ct_window57;
    Ciphertext gout27 = ctx.eval_lut(&gin27, nand2);
    std::cerr << "\rLUT28   ";
    Ciphertext gin28 = 2 * gout24 + gout19;
    Ciphertext gout28 = ctx.eval_lut(&gin28, nand2);
    std::cerr << "\rLUT29   ";
    Ciphertext gin29 = 2 * ct_window33 + ct_window35;
    Ciphertext gout29 = ctx.eval_lut(&gin29, xor2);
    std::cerr << "\rLUT30   ";
    Ciphertext gin30 = 2 * ct_window13 + ct_window29;
    Ciphertext gout30 = ctx.eval_lut(&gin30, nand2);
    std::cerr << "\rLUT31   ";
    Ciphertext gin31 = 2 * gout8 + gout15;
    Ciphertext gout31 = ctx.eval_lut(&gin31, xor2);
    std::cerr << "\rLUT32   ";
    Ciphertext gin32 = 2 * ct_window14 + ct_window30;
    Ciphertext gout32 = ctx.eval_lut(&gin32, nand2);
    std::cerr << "\rLUT33   ";
    Ciphertext gin33 = 2 * ct_window42 + ct_window58;
    Ciphertext gout33 = ctx.eval_lut(&gin33, xor2);
    std::cerr << "\rLUT34   ";
    Ciphertext gin34 = 2 * ct_window33 + ct_window35;
    Ciphertext gout34 = ctx.eval_lut(&gin34, nand2);
    std::cerr << "\rLUT35   ";
    Ciphertext gin35 = 2 * gout8 + gout15;
    Ciphertext gout35 = ctx.eval_lut(&gin35, nand2);
    std::cerr << "\rLUT36   ";
    Ciphertext gin36 = 2 * ct_window13 + ct_window29;
    Ciphertext gout36 = ctx.eval_lut(&gin36, xor2);
    std::cerr << "\rLUT37   ";
    Ciphertext gin37 = 2 * ct_window10 + ct_window26;
    Ciphertext gout37 = ctx.eval_lut(&gin37, nand2);
    std::cerr << "\rLUT38   ";
    Ciphertext gin38 = 2 * ct_window12 + ct_window28;
    Ciphertext gout38 = ctx.eval_lut(&gin38, nand2);
    std::cerr << "\rLUT39   ";
    Ciphertext gin39 = 2 * ct_window14 + ct_window30;
    Ciphertext gout39 = ctx.eval_lut(&gin39, xor2);
    std::cerr << "\rLUT40   ";
    Ciphertext gin40 = 2 * ct_window8 + ct_window24;
    Ciphertext gout40 = ctx.eval_lut(&gin40, and2);
    std::cerr << "\rLUT41   ";
    Ciphertext gin41 = 2 * ct_window9 + ct_window25;
    Ciphertext gout41 = ctx.eval_lut(&gin41, xor2);
    std::cerr << "\rLUT42   ";
    Ciphertext gin42 = 2 * ct_window32 + ct_window34;
    Ciphertext gout42 = ctx.eval_lut(&gin42, and2);
    std::cerr << "\rLUT43   ";
    Ciphertext gin43 = 2 * ct_window9 + ct_window25;
    Ciphertext gout43 = ctx.eval_lut(&gin43, nand2);
    std::cerr << "\rLUT44   ";
    Ciphertext gin44 = 2 * ct_window11 + ct_window27;
    Ciphertext gout44 = ctx.eval_lut(&gin44, nand2);
    std::cerr << "\rLUT45   ";
    Ciphertext gin45 = 2 * gout12 + gout7;
    Ciphertext gout45 = ctx.eval_lut(&gin45, xnor2);
    std::cerr << "\rLUT46   ";
    Ciphertext gin46 = 2 * ct_window36 + ct_window38;
    Ciphertext gout46 = ctx.eval_lut(&gin46, xor2);
    std::cerr << "\rLUT47   ";
    Ciphertext gin47 = 2 * ct_window40 + ct_window56;
    Ciphertext gout47 = ctx.eval_lut(&gin47, xor2);
    std::cerr << "\rINV48   ";
    Ciphertext gout48 = 1 - gout10;

    std::cerr << "\rLUT49   ";
    Ciphertext gin49 = 2 * gout47 + gout0;
    Ciphertext gout49 = ctx.eval_lut(&gin49, xor2);
    std::cerr << "\rLUT50   ";
    Ciphertext gin50 = 2 * gout42 + gout29;
    Ciphertext gout50 = ctx.eval_lut(&gin50, nand2);
    std::cerr << "\rLUT51   ";
    Ciphertext gin51 = 2 * gout27 + gout28;
    Ciphertext gout51 = ctx.eval_lut(&gin51, nand2);
    std::cerr << "\rLUT52   ";
    Ciphertext gin52 = 2 * gout24 + gout19;
    Ciphertext gout52 = ctx.eval_lut(&gin52, xnor2);
    std::cerr << "\rLUT53   ";
    Ciphertext gin53 = 2 * gout40 + gout41;
    Ciphertext gout53 = ctx.eval_lut(&gin53, xor2);
    std::cerr << "\rLUT54   ";
    Ciphertext gin54 = 2 * gout26 + gout46;
    Ciphertext gout54 = ctx.eval_lut(&gin54, nand2);
    std::cerr << "\rLUT55   ";
    Ciphertext gin55 = 2 * gout18 + gout45;
    Ciphertext gout55 = ctx.eval_lut(&gin55, xnor2);
    std::cerr << "\rLUT56   ";
    Ciphertext gin56 = 2 * gout52 + gout53;
    Ciphertext gout56 = ctx.eval_lut(&gin56, xnor2);
    std::cerr << "\rLUT57   ";
    Ciphertext gin57 = 2 * gout40 + gout41;
    Ciphertext gout57 = ctx.eval_lut(&gin57, nand2);
    std::cerr << "\rLUT58   ";
    Ciphertext gin58 = 2 * gout42 + gout29;
    Ciphertext gout58 = ctx.eval_lut(&gin58, xor2);
    std::cerr << "\rLUT59   ";
    Ciphertext gin59 = 2 * gout26 + gout46;
    Ciphertext gout59 = ctx.eval_lut(&gin59, xor2);
    std::cerr << "\rLUT60   ";
    Ciphertext gin60 = 2 * gout47 + gout0;
    Ciphertext gout60 = ctx.eval_lut(&gin60, and2);
    std::cerr << "\rLUT61   ";
    Ciphertext gin61 = 2 * gout51 + gout33;
    Ciphertext gout61 = ctx.eval_lut(&gin61, nand2);
    std::cerr << "\rLUT62   ";
    Ciphertext gin62 = 2 * gout14 + gout49;
    Ciphertext gout62 = ctx.eval_lut(&gin62, nand2);
    std::cerr << "\rLUT63   ";
    Ciphertext gin63 = 2 * gout34 + gout50;
    Ciphertext gout63 = ctx.eval_lut(&gin63, nand2);
    std::cerr << "\rLUT64   ";
    Ciphertext gin64 = 2 * gout51 + gout33;
    Ciphertext gout64 = ctx.eval_lut(&gin64, xnor2);
    std::cerr << "\rLUT65   ";
    Ciphertext gin65 = 2 * gout14 + gout49;
    Ciphertext gout65 = ctx.eval_lut(&gin65, xnor2);
    std::cerr << "\rLUT66   ";
    Ciphertext gin66 = 2 * (1 - gout52) + gout53;
    Ciphertext gout66 = ctx.eval_lut(&gin66, and2);
    std::cerr << "\rLUT67   ";
    Ciphertext gin67 = 2 * gout43 + gout57;
    Ciphertext gout67 = ctx.eval_lut(&gin67, nand2);
    std::cerr << "\rLUT68   ";
    Ciphertext gin68 = 2 * gout2 + gout63;
    Ciphertext gout68 = ctx.eval_lut(&gin68, xor2);
    std::cerr << "\rLUT69   ";
    Ciphertext gin69 = 2 * gout60 + gout56;
    Ciphertext gout69 = ctx.eval_lut(&gin69, and2);
    std::cerr << "\rLUT70   ";
    Ciphertext gin70 = 2 * gout60 + gout56;
    Ciphertext gout70 = ctx.eval_lut(&gin70, xnor2);
    std::cerr << "\rLUT71   ";
    Ciphertext gin71 = 2 * gout11 + gout70;
    Ciphertext gout71 = ctx.eval_lut(&gin71, xnor2);
    std::cerr << "\rLUT72   ";
    Ciphertext gin72 = 2 * gout2 + gout63;
    Ciphertext gout72 = ctx.eval_lut(&gin72, and2);
    std::cerr << "\rLUT73   ";
    Ciphertext gin73 = 2 * gout66 + gout69;
    Ciphertext gout73 = ctx.eval_lut(&gin73, or2);
    std::cerr << "\rLUT74   ";
    Ciphertext gin74 = 2 * gout72 + gout31;
    Ciphertext gout74 = ctx.eval_lut(&gin74, nand2);
    std::cerr << "\rLUT75   ";
    Ciphertext gin75 = 2 * gout13 + gout61;
    Ciphertext gout75 = ctx.eval_lut(&gin75, nand2);
    std::cerr << "\rLUT76   ";
    Ciphertext gin76 = 2 * gout75 + gout3;
    Ciphertext gout76 = ctx.eval_lut(&gin76, xnor2);
    std::cerr << "\rLUT77   ";
    Ciphertext gin77 = 2 * gout67 + gout4;
    Ciphertext gout77 = ctx.eval_lut(&gin77, nand2);
    std::cerr << "\rLUT78   ";
    Ciphertext gin78 = 2 * gout62 + gout71;
    Ciphertext gout78 = ctx.eval_lut(&gin78, xor2);
    std::cerr << "\rLUT79   ";
    Ciphertext gin79 = 2 * gout67 + gout4;
    Ciphertext gout79 = ctx.eval_lut(&gin79, xor2);
    std::cerr << "\rLUT80   ";
    Ciphertext gin80 = 2 * gout62 + gout71;
    Ciphertext gout80 = ctx.eval_lut(&gin80, nand2);
    std::cerr << "\rLUT81   ";
    Ciphertext gin81 = 2 * gout64 + gout79;
    Ciphertext gout81 = ctx.eval_lut(&gin81, xnor2);
    std::cerr << "\rLUT82   ";
    Ciphertext gin82 = 2 * gout72 + gout31;
    Ciphertext gout82 = ctx.eval_lut(&gin82, xor2);
    std::cerr << "\rLUT83   ";
    Ciphertext gin83 = 2 * ct_window33 + gout70;
    Ciphertext gout83 = ctx.eval_lut(&gin83, nand2);
    std::cerr << "\rLUT84   ";
    Ciphertext gin84 = 2 * gout73 + gout81;
    Ciphertext gout84 = ctx.eval_lut(&gin84, and2);
    std::cerr << "\rLUT85   ";
    Ciphertext gin85 = 2 * gout35 + gout74;
    Ciphertext gout85 = ctx.eval_lut(&gin85, nand2);
    std::cerr << "\rLUT86   ";
    Ciphertext gin86 = 2 * gout75 + gout3;
    Ciphertext gout86 = ctx.eval_lut(&gin86, nand2);
    std::cerr << "\rLUT87   ";
    Ciphertext gin87 = 2 * gout73 + gout81;
    Ciphertext gout87 = ctx.eval_lut(&gin87, xnor2);
    std::cerr << "\rLUT88   ";
    Ciphertext gin88 = 2 * gout85 + gout59;
    Ciphertext gout88 = ctx.eval_lut(&gin88, xor2);
    std::cerr << "\rLUT89   ";
    Ciphertext gin89 = 2 * gout87 + gout23;
    Ciphertext gout89 = ctx.eval_lut(&gin89, xor2);
    std::cerr << "\rLUT90   ";
    Ciphertext gin90 = 2 * gout37 + gout77;
    Ciphertext gout90 = ctx.eval_lut(&gin90, nand2);
    std::cerr << "\rLUT91   ";
    Ciphertext gin91 = 2 * (1 - gout64) + gout79;
    Ciphertext gout91 = ctx.eval_lut(&gin91, and2);
    std::cerr << "\rLUT92   ";
    Ciphertext gin92 = 2 * gout83 + gout80;
    Ciphertext gout92 = ctx.eval_lut(&gin92, nand2);
    std::cerr << "\rLUT93   ";
    Ciphertext gin93 = 2 * gout92 + gout89;
    Ciphertext gout93 = ctx.eval_lut(&gin93, nand2);
    std::cerr << "\rLUT94   ";
    Ciphertext gin94 = 2 * gout90 + gout1;
    Ciphertext gout94 = ctx.eval_lut(&gin94, nand2);
    std::cerr << "\rLUT95   ";
    Ciphertext gin95 = 2 * gout87 + gout23;
    Ciphertext gout95 = ctx.eval_lut(&gin95, nand2);
    std::cerr << "\rLUT96   ";
    Ciphertext gin96 = 2 * gout17 + gout86;
    Ciphertext gout96 = ctx.eval_lut(&gin96, nand2);
    std::cerr << "\rLUT97   ";
    Ciphertext gin97 = 2 * gout92 + gout89;
    Ciphertext gout97 = ctx.eval_lut(&gin97, xor2);
    std::cerr << "\rLUT98   ";
    Ciphertext gin98 = 2 * gout85 + gout59;
    Ciphertext gout98 = ctx.eval_lut(&gin98, nand2);
    std::cerr << "\rLUT99   ";
    Ciphertext gin99 = 2 * gout90 + gout5;
    Ciphertext gout99 = ctx.eval_lut(&gin99, xnor2);
    std::cerr << "\rLUT100   ";
    Ciphertext gin100 = 2 * gout91 + gout84;
    Ciphertext gout100 = ctx.eval_lut(&gin100, or2);
    std::cerr << "\rLUT101   ";
    Ciphertext gin101 = 2 * gout96 + gout48;
    Ciphertext gout101 = ctx.eval_lut(&gin101, xnor2);
    std::cerr << "\rLUT102   ";
    Ciphertext gin102 = 2 * gout76 + (1 - gout99);
    Ciphertext gout102 = ctx.eval_lut(&gin102, or2);
    std::cerr << "\rLUT103   ";
    Ciphertext gin103 = 2 * gout44 + gout94;
    Ciphertext gout103 = ctx.eval_lut(&gin103, nand2);
    std::cerr << "\rLUT104   ";
    Ciphertext gin104 = 2 * gout54 + gout98;
    Ciphertext gout104 = ctx.eval_lut(&gin104, and2);
    std::cerr << "\rLUT105   ";
    Ciphertext gin105 = 2 * gout95 + gout93;
    Ciphertext gout105 = ctx.eval_lut(&gin105, nand2);
    std::cerr << "\rLUT106   ";
    Ciphertext gin106 = 2 * (1 - gout76) + gout99;
    Ciphertext gout106 = ctx.eval_lut(&gin106, or2);
    std::cerr << "\rLUT107   ";
    Ciphertext gin107 = 2 * gout76 + gout99;
    Ciphertext gout107 = ctx.eval_lut(&gin107, xnor2);
    std::cerr << "\rLUT108   ";
    Ciphertext gin108 = 2 * gout96 + gout10;
    Ciphertext gout108 = ctx.eval_lut(&gin108, nand2);
    std::cerr << "\rLUT109   ";
    Ciphertext gin109 = 2 * gout103 + gout22;
    Ciphertext gout109 = ctx.eval_lut(&gin109, nand2);
    std::cerr << "\rLUT110   ";
    Ciphertext gin110 = 2 * gout103 + gout22;
    Ciphertext gout110 = ctx.eval_lut(&gin110, xor2);
    std::cerr << "\rLUT111   ";
    Ciphertext gin111 = 2 * gout16 + gout108;
    Ciphertext gout111 = ctx.eval_lut(&gin111, nand2);
    std::cerr << "\rLUT112   ";
    Ciphertext gin112 = 2 * gout101 + gout110;
    Ciphertext gout112 = ctx.eval_lut(&gin112, xor2);
    std::cerr << "\rLUT113   ";
    Ciphertext gin113 = 2 * gout38 + gout109;
    Ciphertext gout113 = ctx.eval_lut(&gin113, nand2);
    std::cerr << "\rLUT114   ";
    Ciphertext gin114 = 2 * gout100 + gout107;
    Ciphertext gout114 = ctx.eval_lut(&gin114, xnor2);
    std::cerr << "\rLUT115   ";
    Ciphertext gin115 = 2 * gout106 + gout100;
    Ciphertext gout115 = ctx.eval_lut(&gin115, nand2);
    std::cerr << "\rLUT116   ";
    Ciphertext gin116 = 2 * gout111 + gout21;
    Ciphertext gout116 = ctx.eval_lut(&gin116, nand2);
    std::cerr << "\rLUT117   ";
    Ciphertext gin117 = 2 * gout58 + gout114;
    Ciphertext gout117 = ctx.eval_lut(&gin117, nand2);
    std::cerr << "\rLUT118   ";
    Ciphertext gin118 = 2 * gout102 + gout115;
    Ciphertext gout118 = ctx.eval_lut(&gin118, and2);
    std::cerr << "\rLUT119   ";
    Ciphertext gin119 = 2 * gout101 + gout110;
    Ciphertext gout119 = ctx.eval_lut(&gin119, nand2);
    std::cerr << "\rLUT120   ";
    Ciphertext gin120 = 2 * gout111 + gout21;
    Ciphertext gout120 = ctx.eval_lut(&gin120, xnor2);
    std::cerr << "\rLUT121   ";
    Ciphertext gin121 = 2 * gout113 + gout36;
    Ciphertext gout121 = ctx.eval_lut(&gin121, nand2);
    std::cerr << "\rLUT122   ";
    Ciphertext gin122 = 2 * (1 - gout112) + gout118;
    Ciphertext gout122 = ctx.eval_lut(&gin122, or2);
    std::cerr << "\rLUT123   ";
    Ciphertext gin123 = 2 * gout58 + gout114;
    Ciphertext gout123 = ctx.eval_lut(&gin123, xor2);
    std::cerr << "\rLUT124   ";
    Ciphertext gin124 = 2 * gout113 + gout36;
    Ciphertext gout124 = ctx.eval_lut(&gin124, xor2);
    std::cerr << "\rLUT125   ";
    Ciphertext gin125 = 2 * gout112 + gout118;
    Ciphertext gout125 = ctx.eval_lut(&gin125, xnor2);
    std::cerr << "\rLUT126   ";
    Ciphertext gin126 = 2 * gout105 + gout123;
    Ciphertext gout126 = ctx.eval_lut(&gin126, xor2);
    std::cerr << "\rLUT127   ";
    Ciphertext gin127 = 2 * gout30 + gout121;
    Ciphertext gout127 = ctx.eval_lut(&gin127, nand2);
    std::cerr << "\rLUT128   ";
    Ciphertext gin128 = 2 * gout126 + gout97;
    Ciphertext gout128 = ctx.eval_lut(&gin128, nand2);
    std::cerr << "\rLUT129   ";
    Ciphertext gin129 = 2 * gout20 + gout116;
    Ciphertext gout129 = ctx.eval_lut(&gin129, nand2);
    std::cerr << "\rLUT130   ";
    Ciphertext gin130 = 2 * gout120 + gout124;
    Ciphertext gout130 = ctx.eval_lut(&gin130, xnor2);
    std::cerr << "\rLUT131   ";
    Ciphertext gin131 = 2 * gout119 + gout122;
    Ciphertext gout131 = ctx.eval_lut(&gin131, nand2);
    std::cerr << "\rLUT132   ";
    Ciphertext gin132 = 2 * gout120 + (1 - gout124);
    Ciphertext gout132 = ctx.eval_lut(&gin132, or2);
    std::cerr << "\rLUT133   ";
    Ciphertext gin133 = 2 * gout127 + gout39;
    Ciphertext gout133 = ctx.eval_lut(&gin133, nand2);
    std::cerr << "\rLUT134   ";
    Ciphertext gin134 = 2 * gout105 + gout123;
    Ciphertext gout134 = ctx.eval_lut(&gin134, nand2);
    std::cerr << "\rLUT135   ";
    Ciphertext gin135 = 2 * gout131 + gout130;
    Ciphertext gout135 = ctx.eval_lut(&gin135, nand2);
    std::cerr << "\rLUT136   ";
    Ciphertext gin136 = 2 * gout32 + gout133;
    Ciphertext gout136 = ctx.eval_lut(&gin136, nand2);
    std::cerr << "\rLUT137   ";
    Ciphertext gin137 = 2 * gout127 + gout39;
    Ciphertext gout137 = ctx.eval_lut(&gin137, xor2);
    std::cerr << "\rLUT138   ";
    Ciphertext gin138 = 2 * gout68 + gout125;
    Ciphertext gout138 = ctx.eval_lut(&gin138, xnor2);
    std::cerr << "\rLUT139   ";
    Ciphertext gin139 = 2 * gout117 + gout134;
    Ciphertext gout139 = ctx.eval_lut(&gin139, nand2);
    std::cerr << "\rLUT140   ";
    Ciphertext gin140 = 2 * (1 - gout125) + gout68;
    Ciphertext gout140 = ctx.eval_lut(&gin140, and2);
    std::cerr << "\rLUT141   ";
    Ciphertext gin141 = 2 * gout132 + gout135;
    Ciphertext gout141 = ctx.eval_lut(&gin141, nand2);
    std::cerr << "\rLUT142   ";
    Ciphertext gin142 = 2 * gout129 + gout25;
    Ciphertext gout142 = ctx.eval_lut(&gin142, nand2);
    std::cerr << "\rLUT143   ";
    Ciphertext gin143 = 2 * gout129 + gout25;
    Ciphertext gout143 = ctx.eval_lut(&gin143, xnor2);
    std::cerr << "\rLUT144   ";
    Ciphertext gin144 = 2 * gout131 + gout130;
    Ciphertext gout144 = ctx.eval_lut(&gin144, xnor2);
    std::cerr << "\rLUT145   ";
    Ciphertext gin145 = 2 * gout143 + (1 - gout137);
    Ciphertext gout145 = ctx.eval_lut(&gin145, or2);
    std::cerr << "\rLUT146   ";
    Ciphertext gin146 = 2 * gout138 + gout139;
    Ciphertext gout146 = ctx.eval_lut(&gin146, and2);
    std::cerr << "\rLUT147   ";
    Ciphertext gin147 = 2 * gout143 + gout137;
    Ciphertext gout147 = ctx.eval_lut(&gin147, xnor2);
    std::cerr << "\rLUT148   ";
    Ciphertext gin148 = 2 * gout136 + gout55;
    Ciphertext gout148 = ctx.eval_lut(&gin148, xnor2);
    std::cerr << "\rLUT149   ";
    Ciphertext gin149 = 2 * gout144 + gout82;
    Ciphertext gout149 = ctx.eval_lut(&gin149, nand2);
    std::cerr << "\rLUT150   ";
    Ciphertext gin150 = 2 * gout9 + gout142;
    Ciphertext gout150 = ctx.eval_lut(&gin150, nand2);
    std::cerr << "\rLUT151   ";
    Ciphertext gin151 = 2 * gout144 + gout82;
    Ciphertext gout151 = ctx.eval_lut(&gin151, xor2);
    std::cerr << "\rLUT152   ";
    Ciphertext gin152 = 2 * gout141 + gout147;
    Ciphertext gout152 = ctx.eval_lut(&gin152, nand2);
    std::cerr << "\rLUT153   ";
    Ciphertext gin153 = 2 * gout141 + gout147;
    Ciphertext gout153 = ctx.eval_lut(&gin153, xnor2);
    std::cerr << "\rLUT154   ";
    Ciphertext gin154 = 2 * gout145 + gout152;
    Ciphertext gout154 = ctx.eval_lut(&gin154, and2);
    std::cerr << "\rLUT155   ";
    Ciphertext gin155 = 2 * gout140 + gout151;
    Ciphertext gout155 = ctx.eval_lut(&gin155, xnor2);
    std::cerr << "\rLUT156   ";
    Ciphertext gin156 = 2 * gout150 + gout6;
    Ciphertext gout156 = ctx.eval_lut(&gin156, xnor2);
    std::cerr << "\rLUT157   ";
    Ciphertext gin157 = 2 * gout156 + gout148;
    Ciphertext gout157 = ctx.eval_lut(&gin157, xnor2);
    std::cerr << "\rLUT158   ";
    Ciphertext gin158 = 2 * gout140 + gout151;
    Ciphertext gout158 = ctx.eval_lut(&gin158, nand2);
    std::cerr << "\rLUT159   ";
    Ciphertext gin159 = 2 * gout104 + gout154;
    Ciphertext gout159 = ctx.eval_lut(&gin159, xnor2);
    std::cerr << "\rLUT160   ";
    Ciphertext gin160 = 2 * gout151 + gout146;
    Ciphertext gout160 = ctx.eval_lut(&gin160, nand2);
    std::cerr << "\rLUT161   ";
    Ciphertext gin161 = 2 * gout88 + gout153;
    Ciphertext gout161 = ctx.eval_lut(&gin161, nand2);
    std::cerr << "\rLUT162   ";
    Ciphertext gin162 = 2 * gout88 + gout153;
    Ciphertext gout162 = ctx.eval_lut(&gin162, xor2);
    std::cerr << "\rLUT163   ";
    Ciphertext gin163 = 2 * (1 - gout138) + gout155;
    Ciphertext gout163 = ctx.eval_lut(&gin163, and2);
    std::cerr << "\rLUT164   ";
    Ciphertext gin164 = 2 * gout149 + gout160;
    Ciphertext gout164 = ctx.eval_lut(&gin164, and2);
    std::cerr << "\rLUT165   ";
    Ciphertext gin165 = 2 * gout159 + gout157;
    Ciphertext gout165 = ctx.eval_lut(&gin165, xnor2);
    std::cerr << "\rLUT166   ";
    Ciphertext gin166 = 2 * (1 - gout139) + gout163;
    Ciphertext gout166 = ctx.eval_lut(&gin166, and2);
    std::cerr << "\rLUT167   ";
    Ciphertext gin167 = 2 * gout158 + gout164;
    Ciphertext gout167 = ctx.eval_lut(&gin167, nand2);
    std::cerr << "\rLUT168   ";
    Ciphertext gin168 = 2 * gout167 + gout162;
    Ciphertext gout168 = ctx.eval_lut(&gin168, xnor2);
    std::cerr << "\rLUT169   ";
    Ciphertext gin169 = 2 * (1 - gout160) + gout166;
    Ciphertext gout169 = ctx.eval_lut(&gin169, or2);
    std::cerr << "\rLUT170   ";
    Ciphertext gin170 = 2 * gout169 + gout128;
    Ciphertext gout170 = ctx.eval_lut(&gin170, and2);
    std::cerr << "\rLUT171   ";
    Ciphertext gin171 = 2 * gout168 + gout169;
    Ciphertext gout171 = ctx.eval_lut(&gin171, and2);
    std::cerr << "\rLUT172   ";
    Ciphertext gin172 = 2 * gout167 + gout162;
    Ciphertext gout172 = ctx.eval_lut(&gin172, nand2);
    std::cerr << "\rLUT173   ";
    Ciphertext gin173 = 2 * gout168 + gout170;
    Ciphertext gout173 = ctx.eval_lut(&gin173, or2);
    std::cerr << "\rLUT174   ";
    Ciphertext gin174 = 2 * gout161 + gout172;
    Ciphertext gout174 = ctx.eval_lut(&gin174, and2);
    std::cerr << "\rLUT175   ";
    Ciphertext gin175 = 2 * gout174 + gout165;
    Ciphertext gout175 = ctx.eval_lut(&gin175, xnor2);
    std::cerr << "\rLUT176   ";
    Ciphertext gin176 = 2 * gout175 + gout173;
    Ciphertext gout176 = ctx.eval_lut(&gin176, and2);
    std::cerr << "\rLUT177   ";
    Ciphertext gin177 = 2 * gout175 + gout171;
    Ciphertext gout177 = ctx.eval_lut(&gin177, and2);
    std::cerr << "\rIMUX178  ";
    Ciphertext gin178A = 2 * gout97 + gout177;
    Ciphertext gout178A = ctx.eval_lut(&gin178A, and2);
    Ciphertext gin178B = 2 * gout176 + (1 - gout177);
    Ciphertext gout178B = ctx.eval_lut(&gin178B, and2);
    Ciphertext gout178 = gout178A + gout178B;
    std::cerr << "\rLUT179   ";
    Ciphertext gin179 = 2 * gout175 + gout171;
    Ciphertext gout179 = ctx.eval_lut(&gin179, nand2);
    std::cerr << "\rIMUX180  ";
    Ciphertext gin180A = 2 * gout176 + gout179;
    Ciphertext gout180A = ctx.eval_lut(&gin180A, and2);
    Ciphertext gin180B = 2 * gout65 + (1 - gout179);
    Ciphertext gout180B = ctx.eval_lut(&gin180B, and2);
    Ciphertext gout180 = gout180A + gout180B;
    std::cerr << "\rIMUX181  ";
    Ciphertext gin181A = 2 * gout126 + gout177;
    Ciphertext gout181A = ctx.eval_lut(&gin181A, and2);
    Ciphertext gin181B = 2 * gout176 + (1 - gout177);
    Ciphertext gout181B = ctx.eval_lut(&gin181B, and2);
    Ciphertext gout181 = gout181A + gout181B;
    std::cerr << "\rIMUX182  ";
    Ciphertext gin182A = 2 * gout176 + gout179;
    Ciphertext gout182A = ctx.eval_lut(&gin182A, and2);
    Ciphertext gin182B = 2 * gout78 + (1 - gout179);
    Ciphertext gout182B = ctx.eval_lut(&gin182B, and2);
    Ciphertext gout182 = gout182A + gout182B;

    std::cerr << "\r          \r";
    std::vector<long> test_out;
    test_out.push_back(ctx.decrypt(&gout180)); /* out0 */
    test_out.push_back(ctx.decrypt(&gout182)); /* out1 */
    test_out.push_back(ctx.decrypt(&gout178)); /* out2 */
    test_out.push_back(ctx.decrypt(&gout181)); /* out3 */
    return test_out;
}

static void
BM_image_sharpen_boolean(benchmark::State& state)
{
    FHEContext ctx;
    ctx.generate_context(tfhe_11_NTT);
    ctx.set_default_message_encoding_type(partial_domain);
    ctx.set_default_plaintext_space(4);

    for (auto _ : state) {
        test_image_sharpen_boolean(ctx);
    }
}

BENCHMARK(BM_image_sharpen_boolean)->Unit(benchmark::kSecond);
BENCHMARK_MAIN();
